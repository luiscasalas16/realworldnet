@model frontend_net.Models.Article

<div class="article-page">
    <div class="banner">
        <div class="container">
            <h1>@Model.Title</h1>

            <div class="article-meta">
                <a href="/profile/eric-simons"><img src="@Model.Author.Image" /></a>
                <div class="info">
                    <a href="/profile/eric-simons" class="author">@Model.Author.Username</a>
                    <span class="date">@Model.CreatedAt.ToString("MMMM dd, yyyy")</span>
                </div>
                <button class="btn btn-sm btn-outline-secondary">
                    <i class="ion-plus-round"></i>
                    &nbsp; Follow Eric Simons <span class="counter">(10)</span>
                </button>
                &nbsp;&nbsp;
                <button class="btn btn-sm btn-outline-primary">
                    <i class="ion-heart"></i>
                    &nbsp; Favorite Post <span class="counter">(29)</span>
                </button>
                @{
                    if (Context.Session.GetString("username") != null && Context.Session.GetString("username") == Model.Author.Username)
                    {
                        <button class="btn btn-sm btn-outline-secondary" onclick="location.href='@Url.Action("Edit", "Article", new { slug = Model.Slug })'">
                            <i class="ion-edit"></i> Edit Article
                        </button>
                        <form method="post" action="@Url.Action("DeleteArticle", "Article")" onsubmit="return confirm('¿Estás
                    seguro de que deseas eliminar este artículo?');">
                            <input type="hidden" name="slug" value="@Model.Slug" />
                            <button type="submit" class="btn btn-sm btn-outline-danger">
                                <i class="ion-trash-a"></i> Delete Article
                            </button>
                        </form>
                    }
                }
                
            </div>
        </div>
    </div>

    <div class="container page">
        <div class="row article-content">
            <div class="col-md-12">
                <h2 id="introducing-ionic">@Model.Description</h2>
                <p>@Model.Body</p>
                <ul class="tag-list">
                    <li class="tag-default tag-pill tag-outline">realworld</li>
                    <li class="tag-default tag-pill tag-outline">implementations</li>
                </ul>
            </div>
        </div>

        <hr />

        <div class="row">
            <div class="col-xs-12 col-md-8 offset-md-2">
                @{
                    if (Context.Session.GetString("username") != null && Context.Session.GetString("username") != Model.Author.Username)
                    {
                        <form class="card comment-form" method="post" action="/Article/CreateComment">
                            <input type="hidden" name="slug" value="@Model.Slug" />
                            <div class="card-block">
                                <textarea class="form-control" placeholder="Write a comment..." rows="3" name="body"></textarea>
                            </div>
                            <div class="card-footer">
                                <img src="http://i.imgur.com/Qr71crq.jpg" class="comment-author-img" />
                                <button class="btn btn-sm btn-primary" type="submit">Post Comment</button>
                            </div>
                        </form>
                    }
                }
                @foreach (var comment in Model.Comments)
                {
                    <div class="card">
                        <div class="card-block">
                            <p class="card-text">@comment.Body</p>
                        </div>
                        <div class="card-footer">
                            <a href="/profile/@comment.Author.Username" class="comment-author">
                                <img src="@comment.Author.Image" class="comment-author-img" />
                            </a>
                            &nbsp;
                            <a href="/profile/@comment.Author.Username" class="comment-author">@comment.Author.Username</a>
                            <span class="date-posted">@comment.CreatedAt.ToString("MMM dd")</span>
                            @if (Context.Session.GetString("username") == comment.Author.Username)
                            {
                                <span class="mod-options">
                                    <form method="post" action="/Article/DeleteComment/@comment.Id">
                                        <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                                    </form>
                                </span>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>